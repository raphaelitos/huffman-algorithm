compressao
Leitura dos dados de entrada: todo o conteudo do arquivo e lido do disco e armazenado na memoria para manipulacao posterior. Este e um detalhe estrategico: e possivel processar os dados diretamente do arquivo, mas pode ser que se perca desempenho com isso. Outra possibilidade e carregar fragmentos do arquivo ao inves de copia-lo inteiro para a memoria, util para arquivos muito grandes. Mas, Hufzip nao foi projetado para isso;
Construcao da fila de prioridade: os dados lidos servem como entrada para o metodo que constroi uma fila de prioridade baseado na contagem de frequencia dos simbolos que aparecem no texto original. Para cada simbolo novo e criado um no. Para um simbolo que ja exista na fila, e aumentada a sua frequencia no no e ele e reordenado na lista. Na minha versao, desenvolvi uma lista duplamente encadeada com o que se parece com uma fila de prioridade parcial - somente os metodos necessarios foram implementados;
Construcao da arvore trie: a lista construida serve como entrada para a construcao da arvore: enquanto houver elementos na lista, remove-se os dois primeiros (nos de menor frequencia), cria-se um novo elemento cuja frequencia e a soma dos dois removidos e estes sao adicionados como filhos do no criado. Por fim, o no criado e inserido na lista como primeiro elemento e, em seguida, reordenado;
Construcao da tabela de codigos: cria-se um array de strings de 256 posicoes para comportar os simbolos da tabela ASCII. Cada posicao do array recebera uma referencia para a cadeia de caracteres gerada que representa aquele simbolo. A tabela e construida percorrendo-se a arvore recursivamente ate que todos os nos-folha sejam encontrados;
Transformacao do texto original em cadeia de bits: constroi-se uma cadeia de bits a partir da substituicao de cada caractere do conteudo original por sua representacao na tabela de codigos;
Construcao do fluxo de bytes comprimido: essa, ao meu ver, e uma das partes mais interessantes. Sabe-se que nao e possivel gravar um bit em um arquivo, entao e necessario construir bytes a partir da cadeia de bits gerada na etapa anterior. Ha algumas maneiras de se fazer isso. Veja, logo abaixo, a solucao que desenvolvi neste projeto.
Gravacao dos dados: Os dados comprimidos sao gravados no disco. Para que a informacao seja recuperada posteriormente, e necessario gravar tambem a tabela de codigos gerada, juntamente com a extensao e o tamanho do arquivo original. Em Hufzip, a extensao do arquivo comprimido e .hfz.

